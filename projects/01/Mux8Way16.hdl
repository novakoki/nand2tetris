// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in = sel[0], out = notsel0);
    Not(in = sel[1], out = notsel1);
    Not(in = sel[2], out = notsel2);

    And3Way(a = notsel2, b = notsel1, c = notsel0, out = outa);
    And16to1(a = a, b = outa, out = out0);

    And3Way(a = notsel2, b = notsel1, c = sel[0], out = outb);
    And16to1(a = b, b = outb, out = out1);

    And3Way(a = notsel2, b = sel[1], c = notsel0, out = outc);
    And16to1(a = c, b = outc, out = out2);

    And3Way(a = notsel2, b = sel[1], c = sel[0], out = outd);
    And16to1(a = d, b = outd, out = out3);

    And3Way(a=sel[2], b = notsel1, c = notsel0, out = oute);
    And16to1(a = e, b = oute, out = out4);

    And3Way(a=sel[2], b=notsel1, c=sel[0], out = outf);
    And16to1(a = f, b = outf, out = out5);

    And3Way(a=sel[2], b=sel[1], c=notsel0, out = outg);
    And16to1(a = g, b = outg, out = out6);

    And3Way(a=sel[2], b=sel[1], c=sel[0], out = outh);
    And16to1(a = h, b = outh, out = out7);

    Or16(a = out0, b = out1, out = out8);
    Or16(a = out2, b = out3, out = out9);
    Or16(a = out4, b = out5, out = out10);
    Or16(a = out6, b = out7, out = out11);
    Or16(a = out8, b = out9, out = out12);
    Or16(a = out10, b = out11, out = out13);
    Or16(a = out12, b = out13, out = out);
}